{"ast":null,"code":"var _jsxFileName = \"/Users/farazabidi/Documents/Skill Building/Learning MERN Stack/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction PastMoves(props) {}\n\n_c2 = PastMoves;\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPlayer: 'X',\n      squares: Array(9).fill(null),\n      history: Array(0).fill(null)\n    };\n    this.state.history.push(this.state.squares);\n  }\n\n  getStatus() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) status = 'Winner: ' + winner;else status = 'Next player: ' + this.state.currentPlayer;\n    return status;\n  }\n\n  render() {\n    const history = this.state.history;\n    const moves = history.map((step, move) => {\n      let description;\n      if (move) description = \"Go to move \" + (move + 1);else description = \"First Move\";\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.handlePassedMoveButton(move),\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: this.state.squares,\n          currentPlayer: this.state.currentPlayer,\n          handleClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.getStatus()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n  handlePassedMoveButton(moveNumber) {\n    alert(\"Move number: \" + moveNumber);\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (squares[i]) return;\n    if (calculateWinner(squares)) return;\n    squares[i] = this.state.currentPlayer;\n    this.setState({\n      squares: squares\n    });\n    this.updatePlayer();\n    this.updateHistory();\n  }\n\n  updatePlayer() {\n    if (this.state.currentPlayer === 'X') this.setState({\n      currentPlayer: 'O'\n    });else this.setState({\n      currentPlayer: 'X'\n    });\n  }\n\n  updateHistory() {\n    const history = this.state.history.slice();\n    history.push(this.state.squares);\n    this.setState({\n      history: history\n    });\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 138,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"PastMoves\");","map":{"version":3,"sources":["/Users/farazabidi/Documents/Skill Building/Learning MERN Stack/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","handleClick","render","PastMoves","Game","constructor","state","currentPlayer","Array","fill","history","push","getStatus","winner","calculateWinner","status","moves","map","step","move","description","handlePassedMoveButton","moveNumber","alert","slice","setState","updatePlayer","updateHistory","document","getElementById","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Square(props){\n  return(\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {  \n  \n  renderSquare(i) {\n    return <Square \n    value={this.props.squares[i]}\n    onClick={() => this.props.handleClick(i)}\n    />;\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction PastMoves(props){\n\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      currentPlayer: 'X',\n      squares: Array(9).fill(null),\n      history: Array(0).fill(null)\n    }\n    this.state.history.push(this.state.squares);\n  }\n\n  getStatus(){\n    const winner = calculateWinner(this.state.squares);    \n    let status;\n    if(winner)\n      status = 'Winner: ' + winner\n    else\n      status = 'Next player: ' + this.state.currentPlayer;\n\n    return status\n  }\n\n  render() {\n    const history = this.state.history;\n    const moves = history.map((step, move) =>{\n      let description\n      if(move)\n        description = \"Go to move \" + (move+1)\n      else\n        description = \"First Move\"\n      return (\n        <li>\n          <button onClick={()=>this.handlePassedMoveButton(move)}>{description}</button>\n        </li>\n      )\n    });\n    return (      \n\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n          squares={this.state.squares}\n          currentPlayer={this.state.currentPlayer}\n          handleClick={(i)=> this.handleClick(i)} \n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{this.getStatus()}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n\n  handlePassedMoveButton(moveNumber){\n    alert(\"Move number: \" + moveNumber)\n  }\n\n  handleClick(i){\n    const squares = this.state.squares.slice();\n    if(squares[i]) return;\n    if(calculateWinner(squares)) return;\n    \n    squares[i] = this.state.currentPlayer;\n    this.setState({squares: squares});\n    this.updatePlayer();\n    this.updateHistory(); \n  }\n\n  updatePlayer(){\n    if(this.state.currentPlayer === 'X')\n      this.setState({currentPlayer: 'O'})\n    else\n      this.setState({currentPlayer: 'X'})\n  }\n\n  updateHistory(){\n    const history = this.state.history.slice();\n    history.push(this.state.squares);\n    this.setState({history: history});    \n  }\n\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"]},"metadata":{},"sourceType":"module"}